f1 = [
	2387.0,
	2384.0,
	2380.0,
	2375.5,
	2370.5,
	2364.5,
	2358.5,
	2352.5,
	2342.0,
	2336.0,
	2332.0,
	2327.5,
	2323.0,
	2318.0,
	2313.5,
	2308.0,
	2302.0,
	2296.0,
	2290.0,
	2283.5,
	2276.0,
	2269.0,
	2261.0,
	2252.0,
	2243.5,
	2234.0,
	2222.5,
	2217.5,
	2210.5,
	2202.5,
	2212.0,
	2216.0,


]

p1 = [
	1.82,
	2.40,
	3.12,
	3.96,
	4.98,
	6.20,
	7.63,
	8.93,
	11.19,
	12.46,
	13.37,
	14.33,
	15.33,
	16.38,
	17.48,
	18.63,
	19.83,
	21.09,
	22.40,
	23.77,
	25.19,
	26.66,
	28.20,
	29.78,
	31.43,
	33.13,
	34.88,
	35.78,
	36.65,
	37.61,
	38.55,
	40.46

]

t1 = [
1.37,
1.42,
1.47,
1.52,
1.57,
1.62,
1.67,
1.72,
1.77,
1.8,
1.82,
1.84,
1.86,
1.88,
1.9,
1.92,
1.94,
1.96,
1.98,
2,
2.02,
2.04,
2.06,
2.08,
2.1,
2.12,
2.14,
2.15,
2.16,
2.17,
2.18,
2.2

]

f4 = [
1853,
1831.5,
1808,
1782.5,
1751,
1715,
1675.5,
1636.5,
1573.5,
1538,
1512,
1485,
1455,
1425.5,
1392.5,
1358,
1320.5,
1279.5,
1235,
1187.5,
1135,
1078.5,
1016,
942,
857,
750.5,
613,
496.5,
348.5,
173.5

]

t4 = t1[:-2]

f2 = [

]



p2 = [
	1.72,
	2.40,
	3.11,
	3.96,
	4.98,
	6.20,
	7.63,
	8.93,
	11.19,
	13.37,
	15.85,
	18.05,
	19.83,
	21.74,
	23.77,
	25.20,
	26.66,
	29.78,
	31.43,
	33.13,
	34.88,
	35.78,
	36.69,
	37.61

]

t2=[
1.42,
1.47,
1.52,
1.57,
1.62,
1.67,
1.72,
1.77,
1.82,
1.87,
1.91,
1.94,
1.97,
2,
2.02,
2.04,
2.06,
2.08,
2.1,
2.12,
2.14,
2.15,
2.16
]

peak4 = [
1192.5,
1206,
1219.5,
1228.5,
1234,
1234.5,
1230,
1216,
1195.5,
1163.5,
1129.5,
1097.5,
1058.5,
1010.5,
974,
931.5,
883,
826,
780,
780,
753,
730.5,
659,

]

peak5 = [
1391.5,
1408,
1423,
1432.5,
1439.5,
1440,
1435,
1417.5,
1394.5,
1357,
1318,
1279.5,
1234.5,
1179,
1136,
1086.5,
1030,
963.5,
883,
895.5,
844,
809.5,
711.5

]

peak6 = [
1590,
1608.5,
1626,
1636.5,
1644.5,
1646,
1640,
1620.5,
1593,
1551.5,
1506,
1462.5,
1410,
1346.5,
1300.5,
1242,
1177,
1100.5,
1009,
1006,
938,
890.5,
776

]

peak7 = [
1788.5,
1810.5,
1829,
1842.5,
1848.5,
1851,
1845,
1824.5,
1792.5,
1745,
1694,
1646,
1589,
1515.5,
1460.5,
1386.5,
1324.5,
1238.5,
1134,
1118.5,
1031.5,
970.5,
841.5,

]

L=0.0495
n = 1

def first_speed(f):
	return 2*f*L



def fourth_speed(f):
	return (2*(f*L))*1.25

c1 = []

for f in f1:
	c1.append(first_speed(f))

c4 = []

for f in f4:
	c4.append(fourth_speed(f))


import matplotlib.pyplot as plt 
import numpy as np 
import math

# plt.plot(t1, c1, "bo")
# plt.show()

# plt.plot(t4, c4, "ro")
# plt.show()

def density_fourth(c1, c4):
	ans = c4/c1
	ans = math.sqrt(ans)
	return ans

dens_fourth = []

for i, a in enumerate(c4):
	dens_fourth.append(density_fourth(c1[i], a))

# print(dens_fourth)

	


def second_speed(f):
	return f*L/3

cp4 = []
cp5 = []
cp6 = []
cp7 = []

a = [peak4, peak5, peak6, peak7]
b = [cp4, cp5, cp6, cp7]

for i, _ in enumerate(a):
	for f in _:
		b[i].append(second_speed(f))

# for _ in b:
# 	plt.plot(t2, _)

# plt.show()

# plt.plot(t2, cp4, "ro", label="Second")
# plt.plot(t1, c1, "bo", label="First")
# plt.plot(t4, c4, "mo", label="Fourth")
# plt.legend()
# plt.show()

inv = []

for d in dens_fourth:
	inv.append(1-d)

# plt.plot(t4, dens_fourth, "bo", label="Superfluid")
# plt.plot(t4, inv, "r.", label="Normal Fluid")
# plt.legend()
# plt.show()
 
bleh = [0, 9, 11, 12, 14, 16, 29]

meh = []

for i, d in enumerate(dens_fourth):
	if i not in bleh:
		meh.append(d)
	else:
		pass


cp = []

ent = [
0.1319,
0.1523,
0.1978,
0.2387,
0.2855,
0.3387,
0.3990,
0.4668,
0.5429,
0.6279,
0.7228,
0.8285,
0.9465,
1.0065,
1.0591,
1.0791,
1.1191,
1.1616,
1.2316,
1.2916,
1.3516,
1.4152,
1.4852,

]

entropy = []

for e in ent:
	entropy.append(e+0.02)

def heat_cap(temp, c2, dens, f2):
	ans = temp*f2*f2
	ans = ans/(c2*c2)
	d = (dens/(1-dens))
	ans = ans*d 
	return ans

for i, t in enumerate(t2):
	cp.append(heat_cap(t, cp4[i], meh[i], entropy[i])*1000)

print(cp)

plt.plot(t2, cp, "mo")
plt.show()